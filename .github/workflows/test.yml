name: Test

on: push

jobs:
  basic:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run action
        id: run_action
        uses: ./
        with:
          docker_username: djbender
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          image: djbender/docker-buildx-pull-or-build-test-dockerfile:latest
          image_cache: djbender/docker-buildx-pull-or-build-test-dockerfile:cache
          dockerfile: test.Dockerfile

      - name: Assert image_id
        run: test ${{ steps.run_action.outputs.image_id }} = 61009c313f3e

  living-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run action living_tag  `true`
        uses: ./
        with:
          docker_username: djbender
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          image: djbender/docker-buildx-pull-or-build-test-dockerfile:living-tag-1
          image_cache: djbender/docker-buildx-pull-or-build-test-dockerfile:living-tag-cache
          dockerfile: test.Dockerfile
          living_tag: true

      - name: Run action living_tag `false`
        uses: ./
        with:
          docker_username: djbender
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          image: djbender/docker-buildx-pull-or-build-test-dockerfile:living-tag-2
          image_cache: djbender/docker-buildx-pull-or-build-test-dockerfile:living-tag-cache
          dockerfile: test.Dockerfile
          living_tag: false

      - name: Run action living_tag omitted
        uses: ./
        with:
          docker_username: djbender
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
          image: djbender/docker-buildx-pull-or-build-test-dockerfile:living-tag-3
          image_cache: djbender/docker-buildx-pull-or-build-test-dockerfile:living-tag-cache
          dockerfile: test.Dockerfile

  auth:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Generate a Docker config.json
        run: |
          json=$(jq --null-input --arg auth ${{ secrets.DOCKER_CONFIG_AUTH }} --arg registry ${DOCKER_REGISTRY:-https://index.docker.io/v1/} '{auths: {($registry): {$auth}}}')
          echo "::set-env name=GITHUB_CONFIG_JSON::$(printf '%s' $json)"

      - name: Run action
        id: run_action
        uses: ./
        with:
          image: djbender/docker-buildx-pull-or-build-test-dockerfile:latest
          image_cache: djbender/docker-buildx-pull-or-build-test-dockerfile:cache
          dockerfile: test.Dockerfile
          docker_config_json: ${{ env.GITHUB_CONFIG_JSON }}

      - name: Assert image_id
        run: test ${{ steps.run_action.outputs.image_id }} = 61009c313f3e
